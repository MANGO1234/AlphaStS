package com.alphaStS;

import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

public class CardUpgrade {
    public static Map<Card, Card> map;
    static {
        map = new HashMap<>();
        map.put(new Card.Bash(), new Card.BashP());
        map.put(new Card.Strike(), new Card.StrikeP());
        map.put(new Card.Defend(), new Card.DefendP());
        map.put(new Card.Anger(), new Card.AngerP());
        map.put(new Card.Armanent(), new Card.ArmanentP());
        map.put(new Card.BodySlam(), new Card.BodySlamP());
        map.put(new Card.Clash(), new Card.ClashP());
        map.put(new Card.Cleave(), new Card.CleaveP());
        map.put(new Card.Clothesline(), new Card.ClotheslineP());
        map.put(new Card.Flex(), new Card.FlexP());
        map.put(new Card.Havoc(), new Card.HavocP());
        map.put(new Card.Headbutt(), new Card.HeadbuttP());
        map.put(new Card.HeavyBlade(), new Card.HeavyBladeP());
        map.put(new Card.IronWave(), new Card.IronWaveP());
        map.put(new Card.PerfectedStrike(), new Card.PerfectedStrikeP());
        map.put(new Card.PommelStrike(), new Card.PommelStrikeP());
        map.put(new Card.ShrugItOff(), new Card.ShrugItOffP());
        map.put(new Card.SwordBoomerang(), new Card.SwordBoomerangP());
        map.put(new Card.Thunderclap(), new Card.ThunderclapP());
        map.put(new Card.TrueGrit(), new Card.TrueGritP());
        map.put(new Card.TwinStrike(), new Card.TwinStrikeP());
        map.put(new Card.Warcry(), new Card.WarcryP());
        map.put(new Card.WildStrike(), new Card.WildStrikeP());
        map.put(new Card.BattleTrance(), new Card.BattleTranceP());
        map.put(new Card.BloodForBlood(), new Card.BloodForBloodP());
        map.put(new Card.Bloodletting(), new Card.BloodlettingP());
        map.put(new Card.BurningPact(), new Card.BurningPactP());
        map.put(new Card.Carnage(), new Card.CarnageP());
        map.put(new Card.Combust(), new Card.CombustP());
        map.put(new Card.DarkEmbrace(), new Card.DarkEmbraceP());
        map.put(new Card.Disarm(), new Card.DisarmP());
        map.put(new Card.Dropkick(), new Card.DropkickP());
        map.put(new Card.DualWield(), new Card.DualWieldP());
        map.put(new Card.Entrench(), new Card.EntrenchP());
        map.put(new Card.Evolve(), new Card.EvolveP());
        map.put(new Card.FeelNoPain(), new Card.FeelNoPainP());
        map.put(new Card.FireBreathing(), new Card.FireBreathingP());
        map.put(new Card.FlameBarrier(), new Card.FlameBarrierP());
        map.put(new Card.GhostlyArmor(), new Card.GhostlyArmorP());
        map.put(new Card.Hemokinesis(), new Card.HemokinesisP());
        map.put(new Card.InfernalBlade(), new Card.InfernalBladeP());
        map.put(new Card.Inflame(), new Card.InflameP());
        map.put(new Card.Intimidate(), new Card.IntimidateP());
        map.put(new Card.Metallicize(), new Card.MetallicizeP());
        map.put(new Card.PowerThrough(), new Card.PowerThroughP());
        map.put(new Card.Pummel(), new Card.PummelP());
        map.put(new Card.Rage(), new Card.RageP());
        map.put(new Card.Rampage(), new Card.RampageP());
        map.put(new Card.RecklessCharge(), new Card.RecklessChargeP());
        map.put(new Card.Rupture(), new Card.RuptureP());
        map.put(new Card.SearingBlow(0), new Card.SearingBlow(1));
        map.put(new Card.SecondWind(), new Card.SecondWindP());
        map.put(new Card.SeeingRed(), new Card.SeeingRedP());
        map.put(new Card.Sentinel(), new Card.SentinelP());
        map.put(new Card.SeverSoul(), new Card.SeverSoulP());
        map.put(new Card.Shockwave(), new Card.ShockwaveP());
        map.put(new Card.SpotWeakness(), new Card.SpotWeaknessP());
        map.put(new Card.Uppercut(), new Card.UppercutP());
        map.put(new Card.Whirlwind(), new Card.WhirlwindP());
        map.put(new Card.Barricade(), new Card.BarricadeP());
        map.put(new Card.Berserk(), new Card.BerserkP());
        map.put(new Card.Bludgeon(), new Card.BludgeonP());
        map.put(new Card.Brutality(), new Card.BrutalityP());
        map.put(new Card.Corruption(), new Card.CorruptionP());
        map.put(new Card.DemonForm(), new Card.DemonFormP());
        map.put(new Card.DoubleTap(), new Card.DoubleTapP());
        map.put(new Card.Exhume(), new Card.ExhumeP());
        map.put(new Card.Feed(), new Card.FeedP());
        map.put(new Card.FiendFire(), new Card.FiendFireP());
        map.put(new Card.Immolate(), new Card.ImmolateP());
        map.put(new Card.Impervious(), new Card.ImperviousP());
        map.put(new Card.Juggernaut(), new Card.JuggernautP());
        map.put(new Card.LimitBreak(), new Card.LimitBreakP());
        map.put(new Card.Offering(), new Card.OfferingP());
        map.put(new Card.Reaper(), new Card.ReaperP());

        map.put(new Card.CardTmpChangeCost(new Card.Bash(), 0), new Card.CardTmpChangeCost(new Card.BashP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.Strike(), 0), new Card.CardTmpChangeCost(new Card.StrikeP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.Defend(), 0), new Card.CardTmpChangeCost(new Card.DefendP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.Armanent(), 0), new Card.CardTmpChangeCost(new Card.ArmanentP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.BodySlam(), 0), new Card.BodySlamP());
        map.put(new Card.CardTmpChangeCost(new Card.Cleave(), 0), new Card.CardTmpChangeCost(new Card.CleaveP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.Clothesline(), 0), new Card.CardTmpChangeCost(new Card.ClotheslineP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.Havoc(), 0), new Card.HavocP());
        map.put(new Card.CardTmpChangeCost(new Card.Headbutt(), 0), new Card.CardTmpChangeCost(new Card.HeadbuttP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.HeavyBlade(), 0), new Card.CardTmpChangeCost(new Card.HeavyBladeP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.IronWave(), 0), new Card.CardTmpChangeCost(new Card.IronWaveP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.PerfectedStrike(), 0), new Card.CardTmpChangeCost(new Card.PerfectedStrikeP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.PommelStrike(), 0), new Card.CardTmpChangeCost(new Card.PommelStrikeP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.ShrugItOff(), 0), new Card.CardTmpChangeCost(new Card.ShrugItOffP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.SwordBoomerang(), 0), new Card.CardTmpChangeCost(new Card.SwordBoomerangP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.Thunderclap(), 0), new Card.CardTmpChangeCost(new Card.ThunderclapP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.TrueGrit(), 0), new Card.CardTmpChangeCost(new Card.TrueGritP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.TwinStrike(), 0), new Card.CardTmpChangeCost(new Card.TwinStrikeP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.WildStrike(), 0), new Card.CardTmpChangeCost(new Card.WildStrikeP(), 0));
        // todo BloodForBlood + Tmp
        map.put(new Card.CardTmpChangeCost(new Card.BurningPact(), 0), new Card.CardTmpChangeCost(new Card.BurningPactP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.Carnage(), 0), new Card.CardTmpChangeCost(new Card.CarnageP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.Combust(), 0), new Card.CardTmpChangeCost(new Card.CombustP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.DarkEmbrace(), 0), new Card.CardTmpChangeCost(new Card.DarkEmbraceP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.Disarm(), 0), new Card.CardTmpChangeCost(new Card.DisarmP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.Dropkick(), 0), new Card.CardTmpChangeCost(new Card.DropkickP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.DualWield(), 0), new Card.CardTmpChangeCost(new Card.DualWieldP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.Entrench(), 0), new Card.CardTmpChangeCost(new Card.EntrenchP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.Evolve(), 0), new Card.CardTmpChangeCost(new Card.EvolveP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.FeelNoPain(), 0), new Card.CardTmpChangeCost(new Card.FeelNoPainP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.FireBreathing(), 0), new Card.CardTmpChangeCost(new Card.FireBreathingP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.FlameBarrier(), 0), new Card.CardTmpChangeCost(new Card.FlameBarrierP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.GhostlyArmor(), 0), new Card.CardTmpChangeCost(new Card.GhostlyArmorP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.Hemokinesis(), 0), new Card.CardTmpChangeCost(new Card.HemokinesisP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.InfernalBlade(), 0), new Card.InfernalBladeP());
        map.put(new Card.CardTmpChangeCost(new Card.Inflame(), 0), new Card.CardTmpChangeCost(new Card.InflameP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.Metallicize(), 0), new Card.CardTmpChangeCost(new Card.MetallicizeP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.PowerThrough(), 0), new Card.CardTmpChangeCost(new Card.PowerThroughP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.Pummel(), 0), new Card.CardTmpChangeCost(new Card.PummelP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.Rampage(), 0), new Card.CardTmpChangeCost(new Card.RampageP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.Rupture(), 0), new Card.CardTmpChangeCost(new Card.RuptureP(), 0));
        // todo SearingBlow + Tmp
        map.put(new Card.CardTmpChangeCost(new Card.SecondWind(), 0), new Card.CardTmpChangeCost(new Card.SecondWindP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.Sentinel(), 0), new Card.CardTmpChangeCost(new Card.SentinelP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.SeverSoul(), 0), new Card.CardTmpChangeCost(new Card.SeverSoulP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.Shockwave(), 0), new Card.CardTmpChangeCost(new Card.ShockwaveP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.SpotWeakness(), 0), new Card.CardTmpChangeCost(new Card.SpotWeaknessP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.Uppercut(), 0), new Card.CardTmpChangeCost(new Card.UppercutP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.Barricade(), 0), new Card.CardTmpChangeCost(new Card.BarricadeP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.Bludgeon(), 0), new Card.CardTmpChangeCost(new Card.BludgeonP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.Corruption(), 0), new Card.CardTmpChangeCost(new Card.CorruptionP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.DemonForm(), 0), new Card.CardTmpChangeCost(new Card.DemonFormP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.DoubleTap(), 0), new Card.CardTmpChangeCost(new Card.DoubleTapP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.Exhume(), 0), new Card.ExhumeP());
        map.put(new Card.CardTmpChangeCost(new Card.Feed(), 0), new Card.CardTmpChangeCost(new Card.FeedP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.FiendFire(), 0), new Card.CardTmpChangeCost(new Card.FiendFireP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.Immolate(), 0), new Card.CardTmpChangeCost(new Card.ImmolateP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.Impervious(), 0), new Card.CardTmpChangeCost(new Card.ImperviousP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.Juggernaut(), 0), new Card.CardTmpChangeCost(new Card.JuggernautP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.LimitBreak(), 0), new Card.CardTmpChangeCost(new Card.LimitBreakP(), 0));
        map.put(new Card.CardTmpChangeCost(new Card.Reaper(), 0), new Card.CardTmpChangeCost(new Card.ReaperP(), 0));

        map.put(new CardColorless.DarkShackles(), new CardColorless.DarkShacklesP());
        map.put(new CardColorless.Apotheosis(), new CardColorless.ApotheosisP());

        map = Collections.unmodifiableMap(map);
    }
}
